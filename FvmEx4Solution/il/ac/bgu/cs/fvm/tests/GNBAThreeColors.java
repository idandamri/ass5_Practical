package il.ac.bgu.cs.fvm.tests;

import static java.util.Arrays.asList;
import static org.junit.Assert.assertEquals;

import java.util.Arrays;
import java.util.HashSet;

import org.junit.Test;

import il.ac.bgu.cs.fvm.Exercise4FacadeImplementation;
import il.ac.bgu.cs.fvm.automata.Automaton;
import il.ac.bgu.cs.fvm.automata.MultiColorAutomaton;
import il.ac.bgu.cs.fvm.labels.State;

public class GNBAThreeColors {

	@Test
	public void threeColorTest() throws Exception {

		MultiColorAutomaton mulAut = getMCAut();

		Automaton aut = new Exercise4FacadeImplementation().GNBA2NBA(mulAut);

		System.out.println(aut.getAcceptingStates());
		System.out.println("expec"+getExpected().getAcceptingStates());

		assertEquals(aut, getExpected());

	}

	MultiColorAutomaton getMCAut() {
		MultiColorAutomaton aut = new MultiColorAutomaton();

		HashSet<String> none = new HashSet<String>();
		HashSet<String> a = new HashSet<String>(Arrays.asList("a"));
		HashSet<String> b = new HashSet<String>(Arrays.asList("b"));
		HashSet<String> c = new HashSet<String>(Arrays.asList("c"));
		HashSet<String> ab = new HashSet<String>(Arrays.asList("a", "b"));
		HashSet<String> ac = new HashSet<String>(Arrays.asList("a", "c"));
		HashSet<String> bc = new HashSet<String>(Arrays.asList("b", "c"));
		HashSet<String> abc = new HashSet<String>(Arrays.asList("a", "b", "c"));

		State s0 = new State("0");
		State s1 = new State("1");
		State s2 = new State("2");
		State s3 = new State("3");
		State s4 = new State("4");
		State s5 = new State("5");
		State s6 = new State("6");
		State s7 = new State("7");

		for (HashSet<String> s : asList(none, a, b, c, ab, ac, bc, abc)) {
			aut.addTransition(s0, s, s4);
			aut.addTransition(s1, s, s4);
			aut.addTransition(s2, s, s4);
			aut.addTransition(s3, s, s4);
			aut.addTransition(s4, s, s4);
			aut.addTransition(s5, s, s4);
			aut.addTransition(s6, s, s4);
			aut.addTransition(s7, s, s4);
		}

		aut.addTransition(s0, a, s2);
		aut.addTransition(s0, b, s0);
		aut.addTransition(s0, c, s1);
		aut.addTransition(s0, ab, s5);
		aut.addTransition(s0, ac, s6);
		aut.addTransition(s0, abc, s7);
		aut.addTransition(s0, bc, s3);
		aut.addTransition(s1, a, s2);
		aut.addTransition(s1, b, s0);
		aut.addTransition(s1, c, s1);
		aut.addTransition(s1, ab, s5);
		aut.addTransition(s1, ac, s6);
		aut.addTransition(s1, bc, s3);
		aut.addTransition(s1, abc, s7);
		aut.addTransition(s2, a, s2);
		aut.addTransition(s2, b, s0);
		aut.addTransition(s2, c, s1);
		aut.addTransition(s2, ab, s5);
		aut.addTransition(s2, ac, s6);
		aut.addTransition(s2, bc, s3);
		aut.addTransition(s2, abc, s7);
		aut.addTransition(s3, a, s2);
		aut.addTransition(s3, b, s0);
		aut.addTransition(s3, c, s1);
		aut.addTransition(s3, ab, s5);
		aut.addTransition(s3, ac, s6);
		aut.addTransition(s3, bc, s3);
		aut.addTransition(s3, abc, s7);
		aut.addTransition(s4, a, s2);
		aut.addTransition(s4, b, s0);
		aut.addTransition(s4, c, s1);
		aut.addTransition(s4, ab, s5);
		aut.addTransition(s4, ac, s6);
		aut.addTransition(s4, bc, s3);
		aut.addTransition(s4, abc, s7);
		aut.addTransition(s5, a, s2);
		aut.addTransition(s5, b, s0);
		aut.addTransition(s5, c, s1);
		aut.addTransition(s5, ab, s5);
		aut.addTransition(s5, ac, s6);
		aut.addTransition(s5, bc, s3);
		aut.addTransition(s5, abc, s7);
		aut.addTransition(s6, a, s2);
		aut.addTransition(s6, b, s0);
		aut.addTransition(s6, c, s1);
		aut.addTransition(s6, ab, s5);
		aut.addTransition(s6, ac, s6);
		aut.addTransition(s6, bc, s3);
		aut.addTransition(s6, abc, s7);
		aut.addTransition(s7, a, s2);
		aut.addTransition(s7, b, s0);
		aut.addTransition(s7, c, s1);
		aut.addTransition(s7, ab, s5);
		aut.addTransition(s7, ac, s6);
		aut.addTransition(s7, bc, s3);
		aut.addTransition(s7, abc, s7);

		aut.setInitial(s0);

		aut.setAccepting(s0, 11);
		aut.setAccepting(s3, 11);
		aut.setAccepting(s5, 11);
		aut.setAccepting(s7, 11);

		aut.setAccepting(s1, 22);
		aut.setAccepting(s3, 22);
		aut.setAccepting(s6, 22);
		aut.setAccepting(s7, 22);

		aut.setAccepting(s2, 33);
		aut.setAccepting(s5, 33);
		aut.setAccepting(s6, 33);
		aut.setAccepting(s7, 33);

		return aut;

	}

	Automaton getExpected() {
		Automaton aut = new Automaton();
		State s01 = new State("0,1");
		State s02 = new State("0,2");
		State s03 = new State("0,3");
		State s11 = new State("1,1");
		State s12 = new State("1,2");
		State s13 = new State("1,3");
		State s21 = new State("2,1");
		State s22 = new State("2,2");
		State s23 = new State("2,3");
		State s31 = new State("3,1");
		State s32 = new State("3,2");
		State s33 = new State("3,3");
		State s41 = new State("4,1");
		State s42 = new State("4,2");
		State s43 = new State("4,3");
		State s51 = new State("5,1");
		State s52 = new State("5,2");
		State s53 = new State("5,3");
		State s61 = new State("6,1");
		State s62 = new State("6,2");
		State s63 = new State("6,3");
		State s71 = new State("7,1");
		State s72 = new State("7,2");
		State s73 = new State("7,3");

		HashSet<String> none = new HashSet<String>();
		HashSet<String> a = new HashSet<String>(Arrays.asList("a"));
		HashSet<String> b = new HashSet<String>(Arrays.asList("b"));
		HashSet<String> c = new HashSet<String>(Arrays.asList("c"));
		HashSet<String> ab = new HashSet<String>(Arrays.asList("a", "b"));
		HashSet<String> ac = new HashSet<String>(Arrays.asList("a", "c"));
		HashSet<String> bc = new HashSet<String>(Arrays.asList("b", "c"));
		HashSet<String> abc = new HashSet<String>(Arrays.asList("a", "b", "c"));

		aut.addTransition(s01, none, s42);
		aut.addTransition(s01, a, s22);
		aut.addTransition(s01, a, s42);
		aut.addTransition(s01, b, s02);
		aut.addTransition(s01, b, s42);
		aut.addTransition(s01, c, s12);
		aut.addTransition(s01, c, s42);
		aut.addTransition(s01, ab, s42);
		aut.addTransition(s01, ab, s52);
		aut.addTransition(s01, ac, s42);
		aut.addTransition(s01, ac, s62);
		aut.addTransition(s01, bc, s32);
		aut.addTransition(s01, bc, s42);
		aut.addTransition(s01, abc, s42);
		aut.addTransition(s01, abc, s72);
		aut.addTransition(s02, none, s42);
		aut.addTransition(s02, a, s22);
		aut.addTransition(s02, a, s42);
		aut.addTransition(s02, b, s02);
		aut.addTransition(s02, b, s42);
		aut.addTransition(s02, c, s12);
		aut.addTransition(s02, c, s42);
		aut.addTransition(s02, ab, s42);
		aut.addTransition(s02, ab, s52);
		aut.addTransition(s02, ac, s42);
		aut.addTransition(s02, ac, s62);
		aut.addTransition(s02, bc, s32);
		aut.addTransition(s02, bc, s42);
		aut.addTransition(s02, abc, s42);
		aut.addTransition(s02, abc, s72);
		aut.addTransition(s11, none, s41);
		aut.addTransition(s11, a, s21);
		aut.addTransition(s11, a, s41);
		aut.addTransition(s11, b, s01);
		aut.addTransition(s11, b, s41);
		aut.addTransition(s11, c, s11);
		aut.addTransition(s11, c, s41);
		aut.addTransition(s11, ab, s41);
		aut.addTransition(s11, ab, s51);
		aut.addTransition(s11, ac, s41);
		aut.addTransition(s11, ac, s61);
		aut.addTransition(s11, bc, s31);
		aut.addTransition(s11, bc, s41);
		aut.addTransition(s11, abc, s41);
		aut.addTransition(s11, abc, s71);
		aut.addTransition(s12, none, s43);
		aut.addTransition(s12, a, s23);
		aut.addTransition(s12, a, s43);
		aut.addTransition(s12, b, s03);
		aut.addTransition(s12, b, s43);
		aut.addTransition(s12, c, s13);
		aut.addTransition(s12, c, s43);
		aut.addTransition(s12, ab, s43);
		aut.addTransition(s12, ab, s53);
		aut.addTransition(s12, ac, s43);
		aut.addTransition(s12, ac, s63);
		aut.addTransition(s12, bc, s33);
		aut.addTransition(s12, bc, s43);
		aut.addTransition(s12, abc, s43);
		aut.addTransition(s12, abc, s73);
		aut.addTransition(s21, none, s41);
		aut.addTransition(s21, a, s21);
		aut.addTransition(s21, a, s41);
		aut.addTransition(s21, b, s01);
		aut.addTransition(s21, b, s41);
		aut.addTransition(s21, c, s11);
		aut.addTransition(s21, c, s41);
		aut.addTransition(s21, ab, s41);
		aut.addTransition(s21, ab, s51);
		aut.addTransition(s21, ac, s41);
		aut.addTransition(s21, ac, s61);
		aut.addTransition(s21, bc, s31);
		aut.addTransition(s21, bc, s41);
		aut.addTransition(s21, abc, s41);
		aut.addTransition(s21, abc, s71);
		aut.addTransition(s03, none, s43);
		aut.addTransition(s03, a, s23);
		aut.addTransition(s03, a, s43);
		aut.addTransition(s03, b, s03);
		aut.addTransition(s03, b, s43);
		aut.addTransition(s03, c, s13);
		aut.addTransition(s03, c, s43);
		aut.addTransition(s03, ab, s43);
		aut.addTransition(s03, ab, s53);
		aut.addTransition(s03, ac, s43);
		aut.addTransition(s03, ac, s63);
		aut.addTransition(s03, bc, s33);
		aut.addTransition(s03, bc, s43);
		aut.addTransition(s03, abc, s43);
		aut.addTransition(s03, abc, s73);
		aut.addTransition(s22, none, s42);
		aut.addTransition(s22, a, s22);
		aut.addTransition(s22, a, s42);
		aut.addTransition(s22, b, s02);
		aut.addTransition(s22, b, s42);
		aut.addTransition(s22, c, s12);
		aut.addTransition(s22, c, s42);
		aut.addTransition(s22, ab, s42);
		aut.addTransition(s22, ab, s52);
		aut.addTransition(s22, ac, s42);
		aut.addTransition(s22, ac, s62);
		aut.addTransition(s22, bc, s32);
		aut.addTransition(s22, bc, s42);
		aut.addTransition(s22, abc, s42);
		aut.addTransition(s22, abc, s72);
		aut.addTransition(s31, none, s42);
		aut.addTransition(s31, a, s22);
		aut.addTransition(s31, a, s42);
		aut.addTransition(s31, b, s02);
		aut.addTransition(s31, b, s42);
		aut.addTransition(s31, c, s12);
		aut.addTransition(s31, c, s42);
		aut.addTransition(s31, ab, s42);
		aut.addTransition(s31, ab, s52);
		aut.addTransition(s31, ac, s42);
		aut.addTransition(s31, ac, s62);
		aut.addTransition(s31, bc, s32);
		aut.addTransition(s31, bc, s42);
		aut.addTransition(s31, abc, s42);
		aut.addTransition(s31, abc, s72);
		aut.addTransition(s13, none, s43);
		aut.addTransition(s13, a, s23);
		aut.addTransition(s13, a, s43);
		aut.addTransition(s13, b, s03);
		aut.addTransition(s13, b, s43);
		aut.addTransition(s13, c, s13);
		aut.addTransition(s13, c, s43);
		aut.addTransition(s13, ab, s43);
		aut.addTransition(s13, ab, s53);
		aut.addTransition(s13, ac, s43);
		aut.addTransition(s13, ac, s63);
		aut.addTransition(s13, bc, s33);
		aut.addTransition(s13, bc, s43);
		aut.addTransition(s13, abc, s43);
		aut.addTransition(s13, abc, s73);
		aut.addTransition(s32, none, s43);
		aut.addTransition(s32, a, s23);
		aut.addTransition(s32, a, s43);
		aut.addTransition(s32, b, s03);
		aut.addTransition(s32, b, s43);
		aut.addTransition(s32, c, s13);
		aut.addTransition(s32, c, s43);
		aut.addTransition(s32, ab, s43);
		aut.addTransition(s32, ab, s53);
		aut.addTransition(s32, ac, s43);
		aut.addTransition(s32, ac, s63);
		aut.addTransition(s32, bc, s33);
		aut.addTransition(s32, bc, s43);
		aut.addTransition(s32, abc, s43);
		aut.addTransition(s32, abc, s73);
		aut.addTransition(s41, none, s41);
		aut.addTransition(s41, a, s21);
		aut.addTransition(s41, a, s41);
		aut.addTransition(s41, b, s01);
		aut.addTransition(s41, b, s41);
		aut.addTransition(s41, c, s11);
		aut.addTransition(s41, c, s41);
		aut.addTransition(s41, ab, s41);
		aut.addTransition(s41, ab, s51);
		aut.addTransition(s41, ac, s41);
		aut.addTransition(s41, ac, s61);
		aut.addTransition(s41, bc, s31);
		aut.addTransition(s41, bc, s41);
		aut.addTransition(s41, abc, s41);
		aut.addTransition(s41, abc, s71);
		aut.addTransition(s23, none, s41);
		aut.addTransition(s23, a, s21);
		aut.addTransition(s23, a, s41);
		aut.addTransition(s23, b, s01);
		aut.addTransition(s23, b, s41);
		aut.addTransition(s23, c, s11);
		aut.addTransition(s23, c, s41);
		aut.addTransition(s23, ab, s41);
		aut.addTransition(s23, ab, s51);
		aut.addTransition(s23, ac, s41);
		aut.addTransition(s23, ac, s61);
		aut.addTransition(s23, bc, s31);
		aut.addTransition(s23, bc, s41);
		aut.addTransition(s23, abc, s41);
		aut.addTransition(s23, abc, s71);
		aut.addTransition(s42, none, s42);
		aut.addTransition(s42, a, s22);
		aut.addTransition(s42, a, s42);
		aut.addTransition(s42, b, s02);
		aut.addTransition(s42, b, s42);
		aut.addTransition(s42, c, s12);
		aut.addTransition(s42, c, s42);
		aut.addTransition(s42, ab, s42);
		aut.addTransition(s42, ab, s52);
		aut.addTransition(s42, ac, s42);
		aut.addTransition(s42, ac, s62);
		aut.addTransition(s42, bc, s32);
		aut.addTransition(s42, bc, s42);
		aut.addTransition(s42, abc, s42);
		aut.addTransition(s42, abc, s72);
		aut.addTransition(s51, none, s42);
		aut.addTransition(s51, a, s22);
		aut.addTransition(s51, a, s42);
		aut.addTransition(s51, b, s02);
		aut.addTransition(s51, b, s42);
		aut.addTransition(s51, c, s12);
		aut.addTransition(s51, c, s42);
		aut.addTransition(s51, ab, s42);
		aut.addTransition(s51, ab, s52);
		aut.addTransition(s51, ac, s42);
		aut.addTransition(s51, ac, s62);
		aut.addTransition(s51, bc, s32);
		aut.addTransition(s51, bc, s42);
		aut.addTransition(s51, abc, s42);
		aut.addTransition(s51, abc, s72);
		aut.addTransition(s33, none, s43);
		aut.addTransition(s33, a, s23);
		aut.addTransition(s33, a, s43);
		aut.addTransition(s33, b, s03);
		aut.addTransition(s33, b, s43);
		aut.addTransition(s33, c, s13);
		aut.addTransition(s33, c, s43);
		aut.addTransition(s33, ab, s43);
		aut.addTransition(s33, ab, s53);
		aut.addTransition(s33, ac, s43);
		aut.addTransition(s33, ac, s63);
		aut.addTransition(s33, bc, s33);
		aut.addTransition(s33, bc, s43);
		aut.addTransition(s33, abc, s43);
		aut.addTransition(s33, abc, s73);
		aut.addTransition(s52, none, s42);
		aut.addTransition(s52, a, s22);
		aut.addTransition(s52, a, s42);
		aut.addTransition(s52, b, s02);
		aut.addTransition(s52, b, s42);
		aut.addTransition(s52, c, s12);
		aut.addTransition(s52, c, s42);
		aut.addTransition(s52, ab, s42);
		aut.addTransition(s52, ab, s52);
		aut.addTransition(s52, ac, s42);
		aut.addTransition(s52, ac, s62);
		aut.addTransition(s52, bc, s32);
		aut.addTransition(s52, bc, s42);
		aut.addTransition(s52, abc, s42);
		aut.addTransition(s52, abc, s72);
		aut.addTransition(s61, none, s41);
		aut.addTransition(s61, a, s21);
		aut.addTransition(s61, a, s41);
		aut.addTransition(s61, b, s01);
		aut.addTransition(s61, b, s41);
		aut.addTransition(s61, c, s11);
		aut.addTransition(s61, c, s41);
		aut.addTransition(s61, ab, s41);
		aut.addTransition(s61, ab, s51);
		aut.addTransition(s61, ac, s41);
		aut.addTransition(s61, ac, s61);
		aut.addTransition(s61, bc, s31);
		aut.addTransition(s61, bc, s41);
		aut.addTransition(s61, abc, s41);
		aut.addTransition(s61, abc, s71);
		aut.addTransition(s43, none, s43);
		aut.addTransition(s43, a, s23);
		aut.addTransition(s43, a, s43);
		aut.addTransition(s43, b, s03);
		aut.addTransition(s43, b, s43);
		aut.addTransition(s43, c, s13);
		aut.addTransition(s43, c, s43);
		aut.addTransition(s43, ab, s43);
		aut.addTransition(s43, ab, s53);
		aut.addTransition(s43, ac, s43);
		aut.addTransition(s43, ac, s63);
		aut.addTransition(s43, bc, s33);
		aut.addTransition(s43, bc, s43);
		aut.addTransition(s43, abc, s43);
		aut.addTransition(s43, abc, s73);
		aut.addTransition(s62, none, s43);
		aut.addTransition(s62, a, s23);
		aut.addTransition(s62, a, s43);
		aut.addTransition(s62, b, s03);
		aut.addTransition(s62, b, s43);
		aut.addTransition(s62, c, s13);
		aut.addTransition(s62, c, s43);
		aut.addTransition(s62, ab, s43);
		aut.addTransition(s62, ab, s53);
		aut.addTransition(s62, ac, s43);
		aut.addTransition(s62, ac, s63);
		aut.addTransition(s62, bc, s33);
		aut.addTransition(s62, bc, s43);
		aut.addTransition(s62, abc, s43);
		aut.addTransition(s62, abc, s73);
		aut.addTransition(s71, none, s42);
		aut.addTransition(s71, a, s22);
		aut.addTransition(s71, a, s42);
		aut.addTransition(s71, b, s02);
		aut.addTransition(s71, b, s42);
		aut.addTransition(s71, c, s12);
		aut.addTransition(s71, c, s42);
		aut.addTransition(s71, ab, s42);
		aut.addTransition(s71, ab, s52);
		aut.addTransition(s71, ac, s42);
		aut.addTransition(s71, ac, s62);
		aut.addTransition(s71, bc, s32);
		aut.addTransition(s71, bc, s42);
		aut.addTransition(s71, abc, s42);
		aut.addTransition(s71, abc, s72);
		aut.addTransition(s53, none, s41);
		aut.addTransition(s53, a, s21);
		aut.addTransition(s53, a, s41);
		aut.addTransition(s53, b, s01);
		aut.addTransition(s53, b, s41);
		aut.addTransition(s53, c, s11);
		aut.addTransition(s53, c, s41);
		aut.addTransition(s53, ab, s41);
		aut.addTransition(s53, ab, s51);
		aut.addTransition(s53, ac, s41);
		aut.addTransition(s53, ac, s61);
		aut.addTransition(s53, bc, s31);
		aut.addTransition(s53, bc, s41);
		aut.addTransition(s53, abc, s41);
		aut.addTransition(s53, abc, s71);
		aut.addTransition(s72, none, s43);
		aut.addTransition(s72, a, s23);
		aut.addTransition(s72, a, s43);
		aut.addTransition(s72, b, s03);
		aut.addTransition(s72, b, s43);
		aut.addTransition(s72, c, s13);
		aut.addTransition(s72, c, s43);
		aut.addTransition(s72, ab, s43);
		aut.addTransition(s72, ab, s53);
		aut.addTransition(s72, ac, s43);
		aut.addTransition(s72, ac, s63);
		aut.addTransition(s72, bc, s33);
		aut.addTransition(s72, bc, s43);
		aut.addTransition(s72, abc, s43);
		aut.addTransition(s72, abc, s73);
		aut.addTransition(s63, none, s41);
		aut.addTransition(s63, a, s21);
		aut.addTransition(s63, a, s41);
		aut.addTransition(s63, b, s01);
		aut.addTransition(s63, b, s41);
		aut.addTransition(s63, c, s11);
		aut.addTransition(s63, c, s41);
		aut.addTransition(s63, ab, s41);
		aut.addTransition(s63, ab, s51);
		aut.addTransition(s63, ac, s41);
		aut.addTransition(s63, ac, s61);
		aut.addTransition(s63, bc, s31);
		aut.addTransition(s63, bc, s41);
		aut.addTransition(s63, abc, s41);
		aut.addTransition(s63, abc, s71);
		aut.addTransition(s73, none, s41);
		aut.addTransition(s73, a, s21);
		aut.addTransition(s73, a, s41);
		aut.addTransition(s73, b, s01);
		aut.addTransition(s73, b, s41);
		aut.addTransition(s73, c, s11);
		aut.addTransition(s73, c, s41);
		aut.addTransition(s73, ab, s41);
		aut.addTransition(s73, ab, s51);
		aut.addTransition(s73, ac, s41);
		aut.addTransition(s73, ac, s61);
		aut.addTransition(s73, bc, s31);
		aut.addTransition(s73, bc, s41);
		aut.addTransition(s73, abc, s41);
		aut.addTransition(s73, abc, s71);

		aut.setInitial(s01);

		aut.setAccepting(s01);
		aut.setAccepting(s31);
		aut.setAccepting(s51);
		aut.setAccepting(s71);

		return aut;

	}

}
